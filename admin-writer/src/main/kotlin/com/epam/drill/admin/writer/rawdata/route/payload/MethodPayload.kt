package com.epam.drill.admin.writer.rawdata.route.payload

import kotlinx.serialization.Serializable

@Serializable
data class MethodsPayload(
    val groupId: String,
    val appId: String,
    val commitSha: String = "",
    val buildVersion: String = "",
    val instanceId: String = "",
    val methods: Array<SingleMethodPayload>
) {
    // autogenerated
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as MethodsPayload

        if (groupId != other.groupId) return false
        if (appId != other.appId) return false
        if (commitSha != other.commitSha) return false
        if (buildVersion != other.buildVersion) return false
        if (instanceId != other.instanceId) return false
        if (!methods.contentEquals(other.methods)) return false

        return true
    }
    // autogenerated
    override fun hashCode(): Int {
        var result = groupId.hashCode()
        result = 31 * result + appId.hashCode()
        result = 31 * result + commitSha.hashCode()
        result = 31 * result + buildVersion.hashCode()
        result = 31 * result + instanceId.hashCode()
        result = 31 * result + methods.contentHashCode()
        return result
    }
}

@Serializable
data class SingleMethodPayload(
    val classname: String,
    val name: String,
    val params: String,
    val returnType: String,
    val probesCount: Int,
    val probesStartPos: Int,
    val bodyChecksum: String,
)