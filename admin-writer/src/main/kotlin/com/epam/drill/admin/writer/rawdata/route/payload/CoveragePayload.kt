package com.epam.drill.admin.writer.rawdata.route.payload

import kotlinx.serialization.Serializable

@Serializable
data class CoveragePayload(
    val instanceId: String,
    val coverage: Array<SingleClassCoveragePayload>,
) {
    // autogenerated
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CoveragePayload

        if (instanceId != other.instanceId) return false
        if (!coverage.contentEquals(other.coverage)) return false

        return true
    }
    // autogenerated
    override fun hashCode(): Int {
        var result = instanceId.hashCode()
        result = 31 * result + coverage.contentHashCode()
        return result
    }
}

@Serializable
data class SingleClassCoveragePayload(
    val classname: String,
    val testId: String,
    val probes: Array<Boolean>
) {
    // autogenerated
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as SingleClassCoveragePayload

        if (classname != other.classname) return false
        if (testId != other.testId) return false
        if (!probes.contentEquals(other.probes)) return false

        return true
    }

    // autogenerated
    override fun hashCode(): Int {
        var result = classname.hashCode()
        result = 31 * result + testId.hashCode()
        result = 31 * result + probes.contentHashCode()
        return result
    }
}